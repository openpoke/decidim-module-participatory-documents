<!DOCTYPE html>
<html dir="ltr" mozdisallowselectionprint>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="google" content="notranslate">
  <title>PDF.js viewer</title>

  <link rel="stylesheet" href="/pdfjs/web/viewer.css">

  <script src="/pdfjs/build/pdf.js"></script>

  <!-- This snippet is used in production (included from viewer.html) -->
  <link rel="resource" type="application/l10n" href="/pdfjs/web/locale/locale.properties">
  <script src="/pdfjs/web/viewer.js"></script>
  <%= csrf_meta_tags %>

  <%= javascript_pack_tag "decidim_participatory_documents_editor" %>
  <%= stylesheet_pack_tag "decidim_participatory_documents_editor" %>
  <%= organization_colors %>
  <%= pdf_custom_style %>
</head>

<body tabindex="1">
  <%= render "decidim/participatory_documents/documents/pdfjs_base", displaySave: true, globalSuggestions: false %>

  <%= render "decidim/participatory_documents/admin/documents/editor_modal" %>

  <div id="notifications"></div>

  <script>
    var AnnotationsPath = '<%= document_annotations_path(document) %>';
    var SectionPath = '<%= document_sections_path(document) %>';
    var CurrentBoxes = <%= document.annotations.collect(&:serialize).to_json.html_safe %>;
    var I18n = <%= pdf_i18n.to_json.html_safe %>;

    var pages = {};
    PDFViewerApplication.initializedPromise.then(function() {
      var options = {
        i18n: I18n,
        editSectionPath: (group) => SectionPath + `/${group}/edit`,
        sectionPath: (group) => SectionPath + `/${group}`,
        newSectionPath: SectionPath + "/new",
        annotationsPath: AnnotationsPath,
        pdfViewer: PDFViewerApplication.pdfViewer,
        saveButton: document.getElementById("DecidimPDSaveButton"),
        csrfToken: document.getElementsByName("csrf-token")[0].content,
        showInfo: window.showInfo,
        showAlert: window.showAlert
      };
      window.InitDocumentManagers(options);

      window.showInfo(I18n.startEditing, {delay: 5000});
      PDFViewerApplication.eventBus.on('annotationeditorlayerrendered', function (doc) {
        if(!pages[doc.pageNumber]) {
          var page = PDFViewerApplication.pdfViewer._pages[doc.pageNumber - 1];
          pages[doc.pageNumber] = page;
          var annotationsLayer = page.annotationEditorLayer && page.annotationEditorLayer.div;
          if(annotationsLayer) {
            page.boxEditor = window.InitPolygonEditor(annotationsLayer, CurrentBoxes.filter(box => box.page_number === doc.pageNumber), options);
          }
        }
      });
    });
  </script>
</body>
</html>
